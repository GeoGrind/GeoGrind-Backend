// Code generated by Wire protocol buffer compiler, do not edit.
// Source: io.grpc.kotlin.generator.CreateChatRoomResponse in io/grpc/kotlin/generator/chat.proto
package io.grpc.kotlin.generator

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import okio.ByteString

public class CreateChatRoomResponse(
  @field:WireField(
    tag = 1,
    adapter = "io.grpc.kotlin.generator.ChatRoom#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 0,
  )
  public val newChatRoom: ChatRoom? = null,
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<CreateChatRoomResponse, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is CreateChatRoomResponse) return false
    if (unknownFields != other.unknownFields) return false
    if (newChatRoom != other.newChatRoom) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + (newChatRoom?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    if (newChatRoom != null) result += """newChatRoom=$newChatRoom"""
    return result.joinToString(prefix = "CreateChatRoomResponse{", separator = ", ", postfix = "}")
  }

  public fun copy(newChatRoom: ChatRoom? = this.newChatRoom, unknownFields: ByteString =
      this.unknownFields): CreateChatRoomResponse = CreateChatRoomResponse(newChatRoom,
      unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<CreateChatRoomResponse> = object :
        ProtoAdapter<CreateChatRoomResponse>(
      FieldEncoding.LENGTH_DELIMITED, 
      CreateChatRoomResponse::class, 
      "type.googleapis.com/io.grpc.kotlin.generator.CreateChatRoomResponse", 
      PROTO_3, 
      null, 
      "io/grpc/kotlin/generator/chat.proto"
    ) {
      override fun encodedSize(`value`: CreateChatRoomResponse): Int {
        var size = value.unknownFields.size
        if (value.newChatRoom != null) size += ChatRoom.ADAPTER.encodedSizeWithTag(1,
            value.newChatRoom)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: CreateChatRoomResponse) {
        if (value.newChatRoom != null) ChatRoom.ADAPTER.encodeWithTag(writer, 1, value.newChatRoom)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: CreateChatRoomResponse) {
        writer.writeBytes(value.unknownFields)
        if (value.newChatRoom != null) ChatRoom.ADAPTER.encodeWithTag(writer, 1, value.newChatRoom)
      }

      override fun decode(reader: ProtoReader): CreateChatRoomResponse {
        var newChatRoom: ChatRoom? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> newChatRoom = ChatRoom.ADAPTER.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return CreateChatRoomResponse(
          newChatRoom = newChatRoom,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: CreateChatRoomResponse): CreateChatRoomResponse = value.copy(
        newChatRoom = value.newChatRoom?.let(ChatRoom.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
