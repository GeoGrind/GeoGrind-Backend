// Code generated by Wire protocol buffer compiler, do not edit.
// Source: io.grpc.kotlin.generator.Courses in io/grpc/kotlin/generator/chat.proto
package io.grpc.kotlin.generator

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import okio.ByteString

public class Courses(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 0,
  )
  public val courseId: String = "",
  @field:WireField(
    tag = 2,
    adapter = "io.grpc.kotlin.generator.UserProfile#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 1,
  )
  public val userProfile: UserProfile? = null,
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 2,
  )
  public val courseCode: String = "",
  @field:WireField(
    tag = 4,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 3,
  )
  public val courseName: String = "",
  @field:WireField(
    tag = 5,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 4,
  )
  public val createdAt: String = "",
  @field:WireField(
    tag = 6,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 5,
  )
  public val updatedAt: String = "",
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<Courses, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is Courses) return false
    if (unknownFields != other.unknownFields) return false
    if (courseId != other.courseId) return false
    if (userProfile != other.userProfile) return false
    if (courseCode != other.courseCode) return false
    if (courseName != other.courseName) return false
    if (createdAt != other.createdAt) return false
    if (updatedAt != other.updatedAt) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + courseId.hashCode()
      result = result * 37 + (userProfile?.hashCode() ?: 0)
      result = result * 37 + courseCode.hashCode()
      result = result * 37 + courseName.hashCode()
      result = result * 37 + createdAt.hashCode()
      result = result * 37 + updatedAt.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """courseId=${sanitize(courseId)}"""
    if (userProfile != null) result += """userProfile=$userProfile"""
    result += """courseCode=${sanitize(courseCode)}"""
    result += """courseName=${sanitize(courseName)}"""
    result += """createdAt=${sanitize(createdAt)}"""
    result += """updatedAt=${sanitize(updatedAt)}"""
    return result.joinToString(prefix = "Courses{", separator = ", ", postfix = "}")
  }

  public fun copy(
    courseId: String = this.courseId,
    userProfile: UserProfile? = this.userProfile,
    courseCode: String = this.courseCode,
    courseName: String = this.courseName,
    createdAt: String = this.createdAt,
    updatedAt: String = this.updatedAt,
    unknownFields: ByteString = this.unknownFields,
  ): Courses = Courses(courseId, userProfile, courseCode, courseName, createdAt, updatedAt,
      unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<Courses> = object : ProtoAdapter<Courses>(
      FieldEncoding.LENGTH_DELIMITED, 
      Courses::class, 
      "type.googleapis.com/io.grpc.kotlin.generator.Courses", 
      PROTO_3, 
      null, 
      "io/grpc/kotlin/generator/chat.proto"
    ) {
      override fun encodedSize(`value`: Courses): Int {
        var size = value.unknownFields.size
        if (value.courseId != "") size += ProtoAdapter.STRING.encodedSizeWithTag(1, value.courseId)
        if (value.userProfile != null) size += UserProfile.ADAPTER.encodedSizeWithTag(2,
            value.userProfile)
        if (value.courseCode != "") size += ProtoAdapter.STRING.encodedSizeWithTag(3,
            value.courseCode)
        if (value.courseName != "") size += ProtoAdapter.STRING.encodedSizeWithTag(4,
            value.courseName)
        if (value.createdAt != "") size += ProtoAdapter.STRING.encodedSizeWithTag(5,
            value.createdAt)
        if (value.updatedAt != "") size += ProtoAdapter.STRING.encodedSizeWithTag(6,
            value.updatedAt)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: Courses) {
        if (value.courseId != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.courseId)
        if (value.userProfile != null) UserProfile.ADAPTER.encodeWithTag(writer, 2,
            value.userProfile)
        if (value.courseCode != "") ProtoAdapter.STRING.encodeWithTag(writer, 3, value.courseCode)
        if (value.courseName != "") ProtoAdapter.STRING.encodeWithTag(writer, 4, value.courseName)
        if (value.createdAt != "") ProtoAdapter.STRING.encodeWithTag(writer, 5, value.createdAt)
        if (value.updatedAt != "") ProtoAdapter.STRING.encodeWithTag(writer, 6, value.updatedAt)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: Courses) {
        writer.writeBytes(value.unknownFields)
        if (value.updatedAt != "") ProtoAdapter.STRING.encodeWithTag(writer, 6, value.updatedAt)
        if (value.createdAt != "") ProtoAdapter.STRING.encodeWithTag(writer, 5, value.createdAt)
        if (value.courseName != "") ProtoAdapter.STRING.encodeWithTag(writer, 4, value.courseName)
        if (value.courseCode != "") ProtoAdapter.STRING.encodeWithTag(writer, 3, value.courseCode)
        if (value.userProfile != null) UserProfile.ADAPTER.encodeWithTag(writer, 2,
            value.userProfile)
        if (value.courseId != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.courseId)
      }

      override fun decode(reader: ProtoReader): Courses {
        var courseId: String = ""
        var userProfile: UserProfile? = null
        var courseCode: String = ""
        var courseName: String = ""
        var createdAt: String = ""
        var updatedAt: String = ""
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> courseId = ProtoAdapter.STRING.decode(reader)
            2 -> userProfile = UserProfile.ADAPTER.decode(reader)
            3 -> courseCode = ProtoAdapter.STRING.decode(reader)
            4 -> courseName = ProtoAdapter.STRING.decode(reader)
            5 -> createdAt = ProtoAdapter.STRING.decode(reader)
            6 -> updatedAt = ProtoAdapter.STRING.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return Courses(
          courseId = courseId,
          userProfile = userProfile,
          courseCode = courseCode,
          courseName = courseName,
          createdAt = createdAt,
          updatedAt = updatedAt,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: Courses): Courses = value.copy(
        userProfile = value.userProfile?.let(UserProfile.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
