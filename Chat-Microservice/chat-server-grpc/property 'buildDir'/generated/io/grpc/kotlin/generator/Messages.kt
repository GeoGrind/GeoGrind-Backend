// Code generated by Wire protocol buffer compiler, do not edit.
// Source: io.grpc.kotlin.generator.Messages in io/grpc/kotlin/generator/chat.proto
package io.grpc.kotlin.generator

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.immutableCopyOf
import com.squareup.wire.`internal`.redactElements
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.collections.List
import okio.ByteString

public class Messages(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 0,
  )
  public val messageId: String = "",
  @field:WireField(
    tag = 2,
    adapter = "io.grpc.kotlin.generator.UserProfile#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 1,
  )
  public val messageSender: UserProfile? = null,
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 2,
  )
  public val messageContent: String = "",
  attachments: List<Attachment> = emptyList(),
  reaction: List<Reaction> = emptyList(),
  messageReadBy: List<UserProfile> = emptyList(),
  @field:WireField(
    tag = 7,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 6,
  )
  public val createdAt: String = "",
  @field:WireField(
    tag = 8,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 7,
  )
  public val updatedAt: String = "",
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<Messages, Nothing>(ADAPTER, unknownFields) {
  @field:WireField(
    tag = 4,
    adapter = "io.grpc.kotlin.generator.Attachment#ADAPTER",
    label = WireField.Label.REPEATED,
    schemaIndex = 3,
  )
  public val attachments: List<Attachment> = immutableCopyOf("attachments", attachments)

  @field:WireField(
    tag = 5,
    adapter = "io.grpc.kotlin.generator.Reaction#ADAPTER",
    label = WireField.Label.REPEATED,
    schemaIndex = 4,
  )
  public val reaction: List<Reaction> = immutableCopyOf("reaction", reaction)

  @field:WireField(
    tag = 6,
    adapter = "io.grpc.kotlin.generator.UserProfile#ADAPTER",
    label = WireField.Label.REPEATED,
    schemaIndex = 5,
  )
  public val messageReadBy: List<UserProfile> = immutableCopyOf("messageReadBy", messageReadBy)

  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is Messages) return false
    if (unknownFields != other.unknownFields) return false
    if (messageId != other.messageId) return false
    if (messageSender != other.messageSender) return false
    if (messageContent != other.messageContent) return false
    if (attachments != other.attachments) return false
    if (reaction != other.reaction) return false
    if (messageReadBy != other.messageReadBy) return false
    if (createdAt != other.createdAt) return false
    if (updatedAt != other.updatedAt) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + messageId.hashCode()
      result = result * 37 + (messageSender?.hashCode() ?: 0)
      result = result * 37 + messageContent.hashCode()
      result = result * 37 + attachments.hashCode()
      result = result * 37 + reaction.hashCode()
      result = result * 37 + messageReadBy.hashCode()
      result = result * 37 + createdAt.hashCode()
      result = result * 37 + updatedAt.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """messageId=${sanitize(messageId)}"""
    if (messageSender != null) result += """messageSender=$messageSender"""
    result += """messageContent=${sanitize(messageContent)}"""
    if (attachments.isNotEmpty()) result += """attachments=$attachments"""
    if (reaction.isNotEmpty()) result += """reaction=$reaction"""
    if (messageReadBy.isNotEmpty()) result += """messageReadBy=$messageReadBy"""
    result += """createdAt=${sanitize(createdAt)}"""
    result += """updatedAt=${sanitize(updatedAt)}"""
    return result.joinToString(prefix = "Messages{", separator = ", ", postfix = "}")
  }

  public fun copy(
    messageId: String = this.messageId,
    messageSender: UserProfile? = this.messageSender,
    messageContent: String = this.messageContent,
    attachments: List<Attachment> = this.attachments,
    reaction: List<Reaction> = this.reaction,
    messageReadBy: List<UserProfile> = this.messageReadBy,
    createdAt: String = this.createdAt,
    updatedAt: String = this.updatedAt,
    unknownFields: ByteString = this.unknownFields,
  ): Messages = Messages(messageId, messageSender, messageContent, attachments, reaction,
      messageReadBy, createdAt, updatedAt, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<Messages> = object : ProtoAdapter<Messages>(
      FieldEncoding.LENGTH_DELIMITED, 
      Messages::class, 
      "type.googleapis.com/io.grpc.kotlin.generator.Messages", 
      PROTO_3, 
      null, 
      "io/grpc/kotlin/generator/chat.proto"
    ) {
      override fun encodedSize(`value`: Messages): Int {
        var size = value.unknownFields.size
        if (value.messageId != "") size += ProtoAdapter.STRING.encodedSizeWithTag(1,
            value.messageId)
        if (value.messageSender != null) size += UserProfile.ADAPTER.encodedSizeWithTag(2,
            value.messageSender)
        if (value.messageContent != "") size += ProtoAdapter.STRING.encodedSizeWithTag(3,
            value.messageContent)
        size += Attachment.ADAPTER.asRepeated().encodedSizeWithTag(4, value.attachments)
        size += Reaction.ADAPTER.asRepeated().encodedSizeWithTag(5, value.reaction)
        size += UserProfile.ADAPTER.asRepeated().encodedSizeWithTag(6, value.messageReadBy)
        if (value.createdAt != "") size += ProtoAdapter.STRING.encodedSizeWithTag(7,
            value.createdAt)
        if (value.updatedAt != "") size += ProtoAdapter.STRING.encodedSizeWithTag(8,
            value.updatedAt)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: Messages) {
        if (value.messageId != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.messageId)
        if (value.messageSender != null) UserProfile.ADAPTER.encodeWithTag(writer, 2,
            value.messageSender)
        if (value.messageContent != "") ProtoAdapter.STRING.encodeWithTag(writer, 3,
            value.messageContent)
        Attachment.ADAPTER.asRepeated().encodeWithTag(writer, 4, value.attachments)
        Reaction.ADAPTER.asRepeated().encodeWithTag(writer, 5, value.reaction)
        UserProfile.ADAPTER.asRepeated().encodeWithTag(writer, 6, value.messageReadBy)
        if (value.createdAt != "") ProtoAdapter.STRING.encodeWithTag(writer, 7, value.createdAt)
        if (value.updatedAt != "") ProtoAdapter.STRING.encodeWithTag(writer, 8, value.updatedAt)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: Messages) {
        writer.writeBytes(value.unknownFields)
        if (value.updatedAt != "") ProtoAdapter.STRING.encodeWithTag(writer, 8, value.updatedAt)
        if (value.createdAt != "") ProtoAdapter.STRING.encodeWithTag(writer, 7, value.createdAt)
        UserProfile.ADAPTER.asRepeated().encodeWithTag(writer, 6, value.messageReadBy)
        Reaction.ADAPTER.asRepeated().encodeWithTag(writer, 5, value.reaction)
        Attachment.ADAPTER.asRepeated().encodeWithTag(writer, 4, value.attachments)
        if (value.messageContent != "") ProtoAdapter.STRING.encodeWithTag(writer, 3,
            value.messageContent)
        if (value.messageSender != null) UserProfile.ADAPTER.encodeWithTag(writer, 2,
            value.messageSender)
        if (value.messageId != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.messageId)
      }

      override fun decode(reader: ProtoReader): Messages {
        var messageId: String = ""
        var messageSender: UserProfile? = null
        var messageContent: String = ""
        val attachments = mutableListOf<Attachment>()
        val reaction = mutableListOf<Reaction>()
        val messageReadBy = mutableListOf<UserProfile>()
        var createdAt: String = ""
        var updatedAt: String = ""
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> messageId = ProtoAdapter.STRING.decode(reader)
            2 -> messageSender = UserProfile.ADAPTER.decode(reader)
            3 -> messageContent = ProtoAdapter.STRING.decode(reader)
            4 -> attachments.add(Attachment.ADAPTER.decode(reader))
            5 -> reaction.add(Reaction.ADAPTER.decode(reader))
            6 -> messageReadBy.add(UserProfile.ADAPTER.decode(reader))
            7 -> createdAt = ProtoAdapter.STRING.decode(reader)
            8 -> updatedAt = ProtoAdapter.STRING.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return Messages(
          messageId = messageId,
          messageSender = messageSender,
          messageContent = messageContent,
          attachments = attachments,
          reaction = reaction,
          messageReadBy = messageReadBy,
          createdAt = createdAt,
          updatedAt = updatedAt,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: Messages): Messages = value.copy(
        messageSender = value.messageSender?.let(UserProfile.ADAPTER::redact),
        attachments = value.attachments.redactElements(Attachment.ADAPTER),
        reaction = value.reaction.redactElements(Reaction.ADAPTER),
        messageReadBy = value.messageReadBy.redactElements(UserProfile.ADAPTER),
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
